FROM python:3.13-slim

# Build arguments for user configuration
ARG USER_ID=1000
ARG GROUP_ID=1000

# Set environment variables for Python best practices
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app

WORKDIR /app

# Install system dependencies (minimal for MCP server)
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy MCP server requirements and install Python dependencies
COPY backend/fleetpulse_mcp/requirements.txt ./mcp_requirements.txt
RUN pip install --no-cache-dir -r mcp_requirements.txt

# Copy MCP server code
COPY backend/fleetpulse_mcp/ ./fleetpulse_mcp/
COPY backend/start_mcp_server.py ./

# Create a non-root user with configurable UID/GID
RUN groupadd -g ${GROUP_ID} appuser && \
    useradd -u ${USER_ID} -g ${GROUP_ID} -M -s /bin/bash appuser && \
    chown -R appuser:appuser /app
USER appuser

# The MCP server can run in stdio mode (for MCP clients) or HTTP mode (for chatbots)
# Expose HTTP port for chatbot connectivity
EXPOSE 8001

# Default environment variables for MCP server
ENV FLEETPULSE_API_HOST=localhost \
    FLEETPULSE_API_PORT=8000 \
    MCP_DEBUG=false \
    MCP_MODE=http \
    MCP_HTTP_HOST=0.0.0.0 \
    MCP_HTTP_PORT=8001

# Run the MCP server
CMD ["python", "start_mcp_server.py"]

# Add a healthcheck for HTTP mode
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
  CMD if [ "$MCP_MODE" = "http" ]; then curl -f http://localhost:${MCP_HTTP_PORT}/health || exit 1; else ps aux | grep -v grep | grep start_mcp_server.py || exit 1; fi