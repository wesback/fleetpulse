FROM python:3.13-slim

# Build arguments for user configuration
ARG USER_ID=1000
ARG GROUP_ID=1000

# Set environment variables for Python best practices
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy and install Python dependencies
COPY backend/requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# Copy backend code
COPY backend/ ./

# Create data directory with proper permissions
RUN mkdir -p /data && chmod 755 /data

# Create a non-root user with configurable UID/GID for better volume compatibility
RUN groupadd -g ${GROUP_ID} appuser && \
    useradd -u ${USER_ID} -g ${GROUP_ID} -M -s /bin/bash appuser && \
    chown -R appuser:appuser /app && \
    chown -R appuser:appuser /data
USER appuser

EXPOSE 8000

# Production mode: Choose between uvicorn (simple) and gunicorn (production)
# DEPLOYMENT_MODE: "uvicorn" for single-process, "gunicorn" for multi-process
# Default to uvicorn for single-container simplicity
CMD ["sh", "-c", "if [ \"${DEPLOYMENT_MODE:-uvicorn}\" = \"gunicorn\" ]; then gunicorn main:app -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000 --workers ${GUNICORN_WORKERS:-2}; else uvicorn main:app --host 0.0.0.0 --port 8000; fi"]

# Add a healthcheck
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
  CMD curl --fail http://localhost:8000/health || exit 1
